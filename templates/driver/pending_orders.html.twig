{% extends 'base.html.twig' %}

{% block title %}Pending orders{% endblock %}

{% block scripts %}
    <script src="/services/map/mapManagement.js"></script>
    <script src="/services/location/index.js"></script>
    <script src="/services/notification.js"></script>
{% endblock %}

{% block stylesheets %}
    <style>
        .form-group {
            margin-top: 20px;
        }

        input, select {
            display: block;
        }

        button, .driver-activity a {
            padding: 5px 10px;
            background: transparent;
            border: 1px solid #333;
            color: #333;
            text-decoration: none;

        }

        #area-map {
            height: 100vh;
        }


        .take-order {
            padding: 4px 8px;
            border: 1px solid #333;
            color: #333;
            text-decoration: none;
        }

        .container {
            position: relative;
        }

        .driver-activity {
            position: absolute;
            top: 20px;
            right: 20px;
            padding: 20px;
            z-index: 400;
            background: rgba(255, 255, 255, 0.7);
        }
    </style>

{% endblock %}

{% block body %}
    <div id="pending-orders-container" class="container">
        <div class="map" id="area-map"></div>

        <div class="driver-activity">
            <p>Current status: <span id="current-status"></span></p>
            <a href="{{ path("assign_driver_status", {isWorking: 'true'}) }}">Start work</a>
            <a href="{{ path("assign_driver_status", {isWorking: 'false'}) }}">End work</a>
        </div>
        <div id="content" class="content-container">
        </div>
    </div>

    <script>
        let isDriverActive = false

        let isWorking = {{ driver.isWorking|json_encode() }};

        document.addEventListener("DOMContentLoaded", () => {
            const statusSpan = document.getElementById("current-status")
            statusSpan.innerText = isWorking ? 'Currently working' : 'Not working'
            statusSpan.classList.add(isWorking ? 'working' : 'off')
        })


        const map = initializeMap('area-map', [54.903914, 23.958851])


        let driverMarker = {}

        const setDriverPosition = (pos) => {
            driverMarker = addMarker(map, pos, 'car')
        }
        getCurrentDeviceLocation(setDriverPosition)


        let url = ''
        let takeLink = ''
        let marker = {}
        {% if driver.isWorking == true %}

        {% for order in pendingOrders %}
        url = "{{ url('driver_assign_order', {'id': order.id}) }}"
        takeLink = document.createElement('a')
        takeLink.href = url
        takeLink.classList.add('take-order')
        takeLink.innerText = "Take"
        marker = addMarker(map, {
            lat: {{ order.latCoordinateStart }},
            lng: {{ order.lngCoordinateStart }} }, 'user-clock')
        marker.bindPopup(takeLink);
        {% endfor %}
        {% endif %}

        const onReceiveConfirmation = (res) => {
            console.log(res)
            url = "{{ url('driver_assign_order', {'id': "ORDER_ID"}) }}"
            url = url.replace("ORDER_ID",res.data.id);
            takeLink = document.createElement('a')
            takeLink.href = url
            takeLink.classList.add('take-order')
            takeLink.innerText = "Take"
            marker = addMarker(map, {
                lat: res.data.lat,
                lng: res.data.lng}, 'user-clock')
            marker.bindPopup(takeLink);
        };

        subscribeToTopic('pending/orders', onReceiveConfirmation)

    </script>
{% endblock %}
